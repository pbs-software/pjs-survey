## ---------STATA (still to be processed)---------

#cap prog drop prepwcvishrimp
#prog def prepwcvishrimp
#
#	tempvar tmpstrat
#
#	syntax, file(string)
#	cap log close
#	log using surveyprepmessages.log, replace
#
#	qui {
#		lab def 
#	stratum = 1:2
#	names(stratum) = c("124","125")
#		lab save stratum using $stratumlabelfilename, replace
#		getlabels `file'
#		drop if year<$shrimpdropyear						/* capacity to conform to GF Section standard */
#		count if trip==67467&sdepth~=.
#		if r(N)==0 {
#			di in red _n(2) "Forgot to update the depth observations in trip==67467!!" _n /*
#				*/ _col(6) "They are all missing! Run the update query and re-extract the data" _n /*
#				*/ _col(6) "Program ended!!"
#			exit 9999
#		}
#		drop open wing effort2
#		lab var door "Doorspread opening size (km)"
#		gen int stratum=1 if grouping_code==112
#		replace stratum=2 if grouping_code==113
#		drop if stratum<1|stratum>2
#		lab val stratum stratum
#		/* the following are dropped tows from Sinclair & Starr (2002) */
#		replace stratum=1 if year==1973&set==47	
#		replace stratum=1 if year==1988&set==68	
#		replace stratum=. if year==2000&set==9	
#		replace stratum=. if year==1973&set==58	
#		replace stratum=. if year==1973&set==59	
#		replace stratum=. if year==1973&set==60	
#		replace stratum=. if year==1973&set==61	
#		replace stratum=. if year==1973&set==62	
#		replace stratum=. if year==1973&set==63	
#		replace stratum=. if year==1973&set==78	
#		replace stratum=. if year==1975&set==61	
#		replace stratum=. if year==1975&set==62	
#		replace stratum=. if year==1975&set==63	
#		replace stratum=. if year==1975&set==64	
#		replace stratum=. if year==1975&set==65	
#		replace stratum=. if year==1975&set==66	
#		replace stratum=. if year==1976&set==80	
#		replace stratum=. if year==1997&set==13	
#		replace stratum=. if year==1997&set==14	
#		replace stratum=. if year==1997&set==15	
#		replace stratum=. if year==1998&set==88	
#		replace stratum=. if year==1976&set==9	
#		replace stratum=. if year==1999&set==128	
#		replace stratum=. if year==1999&set==129	
#		replace stratum=. if year==2000&set==116	
#		replace stratum=. if year==2002&set==49	
#		replace stratum=. if year==2001&set==50	
#		getusability
#		gen byte `tmpstrat'=1 $ifuse
#		replace stratum=. if `tmpstrat'==.
#/*
#		/* this code has been suppressed */
#		count if open==.
#		local nopen=r(N)
#		if `nopen'>0 {
#			nois di in ye _n(2) "missing wingspread values by year:"
#			nois tab year if open==.
#			nois di in ye _n "replacing missing wingspread values with constant=10.6 m"
#			nois replace open=10.6 if open==.
#			notes open: replaced `nopen' missing values for this variable with constant=10.6 m
#		}
#*/
#		nois {
#			di in ye _n "replacing all doorspread values with constant=" $defaultshrimpdoorspread*1000 " m"
#			replace door=$defaultshrimpdoorspread
#		}
#		sum year
#		global minyear=r(min)
#		global maxyear=r(max)
#		replace stratum=. if sdepth>160		/* by agreement */
#		replace stratum=. if month>8			/* need to include Aug tows if 1987 is to be included */
#		nois uniqtows door
#		gen density2=weight/(distance*door)
#		replace density2=0 if density2==.
#		getweight
#		global surveyname "WCVI shrimp trawl survey"
#		getnotes 1
#	} /* qui */
#
#	notes: this file has only survey tows for areas 124 & 125 which are less than 160 m in depth /*
#		*/ (corresponds to strat2 in previous analyses)
#	notes stratum: this is the revised stratum definition established by Sinclair & Starr in their 2003 PSARC document /*
#		*/ on WCVI pcod
#	notes distance: this value generated by Shellfish Section: represents time on bottom as determined from /*
#		*/ bottom contact and measurement from lats and longs (phone call w/ J. Bootillier [23 Oct 2006])
#	notes distance: checked that this value is consistently provided in km (rather than knots): [24/09/2007]
#	notes door: replaced all doorspreads for this variable with constant=$defaultshrimpdoorspread km
#
#	order year month date vessel trip set stratum group dfo area speed effort dist latitude longit /*
#		*/ sdep edep door reason $use weight number density
#
#end def
#
#
#
#cap prog drop preppcodmon
#prog def preppcodmon
#
#	tempvar gg
#
#	syntax, file(string)
#
#	qui {
#		#delimit ;
#	stratum = 6:10
#	names(stratum) = c("Pcod TBR", "Pcod WR", "Pcod SG", "Pcod RI", "Pcod HS")
#		;
#		#delimit cr
#		lab save stratum using $stratumlabelfilename, replace
#		getlabels `file'
#		drop species trip vessel effort2 distance wing door open
#		getusability
#		egen byte stratum=group(grouping month) $ifuse
#		local wing=13.8/1000						/* assume constant wingspread of 13.8 m */
#		gen density=weight/(speed*effort*`wing')			/* checked & all speed~=.&wing ~=.&effort~=. */
#		replace density=0 if density==.			
#		lab val grouping stratum
#		lab var strat "Month/Area Stratum
#
#	} /* qui */
#
#	notes: this is a file of the Pacific cod monitoring survey from 2002 to 2004.  /*
#		*/The only catch data are for $speciesname.
#	notes density: assume constant wingspread for this survey: 13.8 m
#	notes density: density=weight/(speed*time*0.0138)  = kg/km^2  (calculated distance)
#	notes stratum: generated from grouping code (stratum code generated by Norm Olsen) & month of capture
#		*/ This field is missing ('.') for usability codes other than 0/1/2/6/.
#	notes grouping: original grouping code for all tows
#	$usenote
#	if "$usenote2"~="" {
#		$usenote2
#	}
#
#	order year month set stratum grouping area dfo speed effort sdep edep $use weight number density	
#
#end def
#
#
#cap prog drop prepqcshrimp
#prog def prepqcshrimp
#
#	tempvar gg
#
#	syntax, file(string)
#	cap log close
#	log using surveyprepmessages.log, replace
#
#	qui {
#	stratum = 1:3
#	names(stratum) = c("109", "110", "111")
#		lab save stratum using $stratumlabelfilename, replace
#		getlabels `file'
#		drop if year==1998							/* agreed to drop this year */
#		drop if year<$shrimpdropyear						/* capacity to truncate to GF section standard */
#		nois {
#			di in ye _n "replacing all doorspread values with constant=" $defaultshrimpdoorspread*1000 " m"
#			replace door=$defaultshrimpdoorspread
#		}
#		keep if grouping==109|grouping==110|grouping==111  		/* rest is junk: see 1999QCSndshrimploc.dta 
#												   for info on sets missing grouping codes in 1999 */		
#		drop wing trip effort2
#		lab var open "Net opening size (m)"
#		getusability
#		sum group
#		gen byte stratum=group-(r(min)-1) $ifuse
#		lab val stratum stratum
#		replace stratum=. if stratum==3					/* get rid of stratum=111 but leave in data set */
#
#		sum year
#		global maxyear=r(max)
#		global minyear=r(min)
#		sum speed
#		local meanspeed=r(mean)							/* get mean speed before substitution */
#		nois di in ye _n(2) "missing speed values by year:"
#		nois tab year if speed==.|speed==0
#		global nspeed=r(N)
#		forv yy=$minyear/$maxyear {
#			sum speed if year==`yy'
#			replace speed=r(mean) if (speed==.|speed==0)&year==`yy'
#		}
#		forv yy=$minyear/$maxyear {
#			tab speed if year==`yy'
#			if r(N)==0 {
#				replace speed=`meanspeed' if year==`yy'
#				local badyear "`badyear' `yy'"
#			}
#		}
#
#		/* Note: distance is in kilometres [updated & checked 24/09/2007] */
#		nois di in ye _n(2) "missing distance or distance==0 values by year:"
#		nois tab y if distance==0|distance==.
#		local ndist=r(N)	
#		replace distance=speed*effort if distance==0|distance==.
#		nois uniqtows door
#		gen density=weight/(distance*door)		
#		replace density=0 if density==.			
#		getweight
#		global surveyname "Queen Charlotte Sound shrimp trawl survey"
#		getnotes 1
#	} /* qui */
#
#	notes distance: this value generated by Shellfish Section: represents time on bottom as determined from /*
#		*/ bottom contact and measurement from lats and longs (phone call w/ J. Bootillier [23 Oct 2006])
#	notes distance: checked that this value is consistently provided in km (rather than knots): [24/09/2007]
#	notes distance: `ndist' tows use a calculated distance (speed*effort) because distance==0 (not credible)|distance=='.'
#	notes density: use same doorspread as used by Norm Olsen: density=weight/(distance*$defaultshrimpdoorspread) [kg/km^2]
#	notes door: this variable filled with value=$defaultshrimpdoorspread (default value used by Norm Olsen). This was used /*
#		*/ in the density calculation
#	notes speed: missing values for this field filled in with mean for survey year (`nspeed' tows)
#	notes speed: the following years have no speed data at all (included in above totals): `badyear' .  /*
#		*/  The overall mean (taken before substitution) was used for these years
#	notes stratum: generated from grouping code (stratum code generated by Norm Olsen) /*
#		*/ Only strata allowed are 109/110.  Stratum 111 has been set='.' as of 2007 due to its location and /*
#		*/ and lack of groundfish species.  Dropped all records with missing strata or WCVI groupings.  /*
#		*/ This field is missing ('.') for usability codes other than 0/1/2/6/.  
#
#	order year month date vessel set stratum group dfo area speed effort dist latitude longit /*
#		*/ sdep edep door open reason $use weight number density
#
#
#end def
#
#
#cap prog drop prep1996caledonian
#prog def prep1996caledonian
#
#	syntax, file(string)
#
#	global surveyname "1996 Caledonian WCVI"
#
#	#delimit ;
#	stratum = 1:4
#	names(stratum) = c("50-125m", "125-200m", "200-330m", "330-500m")
#	;
#	#delimit cr
#	lab save stratum using $stratumlabelfilename, replace
#
#	getlabelends stratum
#	dosynoptic `file'
#
#	qui {
#		replace stratum=.
#		replace strat=2 if sdepth<200
#		replace strat=3 if sdepth>=200&sdep<330
#		replace strat=4 if strat==.
#	}
#
#	run $stratumlabelfilename
#	lab val stratum stratum
#	lab var strat Stratum
#
#	notes drop door
#	notes door: assumed value (used $defaultdoorspread m=from Yamanaka et al. 1996 Can MS Report 2362)
#	notes drop stratum
#	notes stratum: conformed to WCVI synoptic stratum definitions based on starting depth: replace strat=2 /*
#		*/ if sdepth<200; replace strat=3 if sdepth>=200 &sdep<330; replace strat=4 if strat==.
#
#	order year month date vessel set stratum group dfo area speed effort distance distance_calc latitude longit /*
#		*/ sdep edep door reason $use weight number density
#
#end def
#
#cap prog drop prepgbreedwcvi
#prog def prepgbreedwcvi
#
#	/* this section is directed towards GB Reed surveys that worked the WCVI.  All other tows will be suppressed.
#	   I propose to use the WCVI synoptic survey depth strata and ignore the areal strata (for the time being)
#	   All other tows will have stratum==. (note that there are no Norm Olsen grouping codes with these data)
#
#	   I am also going to hardwire special code for the 1972 survey because the date fields have been screwed up
#	   in the original data.
#
#	   [19 Aug 2013]: started to move to a more general approach for Silvergray.  Allow for all tows between 50m
#		and 500m.  This code is unfinished and needs to be considered carefully before using it.
#	*/
#
#	tempvar gg
#	tempfile hold 1972 missing
#
#	syntax, file(string) 
#
#	qui {
#		#delimit ;
#	stratum = 1:4
#	names(stratum) = c("50-124m", "125-199m", "200-329m", "330-500m")
#		;
#		#delimit cr
#		lab save stratum using $stratumlabelfilename, replace
#		global surveyname "GB Reed Historic: WCVI"
#
#		getlabelends stratum
#		getlabels `file'
#		egen byte `gg'=group(year)
#		tab `gg'
#		local nr=r(r)
#
#		/* generate my own stratum definitions: */
#		gen byte stratum=.
#		forv nz=1/$nstrat {
#			replace stratum=`nz' if sdepth>=${low`nz'}&sdepth<${upp`nz'}
#		}
#		/* step through out-of-range tows and assign to a stratum if edepth or seabird_depth allows */
#		save `hold'
#		keep if stratum==.
#		save `missing'
#		use `hold'
#		drop if stratum==.
#		save `hold', replace
#		use `missing'
#		sort year fe_id
#		count
#		forv nn=1/`r(N)' {
#			foreach deptype in edepth seabird {
#				local strat=stratum[`nn']
#				if `strat'==. {
#					local newdepth=`deptype'[`nn']
#					forv nz=1/$nstrat {
#						if `newdepth'>=${low`nz'}&`newdepth'<${upp`nz'} {
#							replace stratum=`nz' in `nn'
#							continue, break
#						}
#					}
#				}
#			}
#		}
#		save `missing', replace
#		use `hold'
#		append using `missing'
#		replace stratum=. if major~=3&major~=4
#		*replace stratum=. if longit>-125.8
#		lab val stratum stratum
#		lab var strat Stratum	
#
#		/* replace wonky 1972 data */
#		save `hold', replace
#		keep if year==1972
#		save `1972'
#		use `hold'
#		drop if year==1972
#		save `hold', replace
#		insheet using D:\Groundfish\2012\POP\data\surveys\WCVI\GBReed_historic\trip67450_allfe.csv, clear
#		ren fe_begin_deployment_time dd
#		ren fe_end_retrieval_time dd2
#		ren fishing_event_id fe_id
#		keep fe_id dd dd2
#		ddate dd, gen(date) mask("ymd") flag(0)
#		foreach ddz in dd dd2 {
#			local cc=`cc'+1
#			ttime `ddz', flag(0)  gen(tt`cc') 
#		}
#		gen effort=tt2-tt1
#		drop tt2 tt1 dd dd2
#		merge 1:1 fe_id using `1972', update
#		save `1972', replace
#		use `hold'
#		append using `1972'
#
#		getvessel
#		drop species trip wing effort2 open
#		getusability
#		replace stratum=. if (use!=0&use!=1&use!=2&use!=6)
#
#		count
#		local ntows=`r(N)'
#		tab vess
#		local nvess=`r(r)'
#		replace door=$defaultdoorspread							
#		replace speed=speed*$kn_to_km if year==1972
#		notes speed: all speeds in 1972 converted to km/h from what appears to have been nm/h (average near 3)
#		lab var distance "Distance travelled
#		count if distance==0
#		local ndist0=`r(N)'
#		count if distance~=.&distance>0
#		local ndist1=`r(N)'
#		replace distance=. 					 		/* will only use calculated distance travelled */
#
#		nois {
#			di in ye _n(2) "missing speed values by year:"
#			tab year if speed==.|speed==0
#			global nspeed=r(N)
#			di in ye _n(2) "mean speed values used by year:"
#			table year, c(n speed mean speed) row
#		}
#		sum speed, meanonly
#		local bigspeed=`r(mean)'
#		forv gr=1/`nr' {
#			if `gr'==1 {
#				sum year if `gg'==1, meanonly
#				local minyear=r(mean)
#			}
#			else if `gr'==`nr' {
#				sum year if `gg'==`nr', meanonly
#				local maxyear=r(mean)
#			}
#			sum speed if `gg'==`gr', meanonly
#			if `r(N)'~=0 {
#				replace speed=`r(mean)' if (speed==.|speed==0)&`gg'==`gr'
#			}
#			else {
#				replace speed=`bigspeed' if (speed==.|speed==0)&`gg'==`gr'
#			}
#		}
#
#		run $stratumlabelfilename
#		gen int area=1082 if stratum==1
#		replace area=499 if stratum==2
#		replace area=587 if stratum==3
#		replace distance=speed*effort if distance==.			/* calculate distance travelled */
#		gen density=weight/(distance*door/1000)
#		replace density=0 if density==.
#	} /* qui */
#
#	notes: this is a file of the Historical GIG GB Reed survey data, with emphasis on WCVI, from `minyear' to `maxyear'.
#	notes stratum: uses depth stratum definitions from WCVI synoptic survey.  Only valid with a valid usability code /*
#		*/ (0/1/2/6) and if Major==3C or Major==3D
#
#	notes: The only catch data are for $speciesname
#	notes door: assumed value (used $defaultdoorspread m=from Yamanaka et al. 1996 Can MS Report 2362)
#	notes speed: speed=mean(speed) for survey year when missing.  Replace $nspeed values in total file
#	notes distance: there were `ndist0' records where distance==0.  These were changed to '.' before all calculations
#	notes distance: there were `ndist1' records where distance~=0&distance~=.  These were changed to '.' before all /*
#		*/ calculations because the values did not look credible and in most instances were incompatible with the /*
#		*/ time towed and a speed of around 5-6 km/h
#	notes distance: calculated field: gen distance (km) =effort (h) *speed (km/h)
#	notes density: gen density=weight/(distance*door/1000)
#	notes density: replace density=0 if density==.
#	$usenote
#	if "$usenote2"~="" {
#		$usenote2
#	}
#	$note1
#	$note2
#
#	drop _m seabird 
#	foreach vvar in group area {
#		confirm exist variable `vvar'
#		if _rc==0 local `vvar' "`vvar'"
#	}
#	order year month date vessel fe_id set stratum major `group' dfo `area' speed effort dist latitude longit /*
#		*/ sdep edep door reason $use weight number density
#
#end def
#	
#cap prog drop prephistoricalwcqci
#prog def prephistoricalwcqci
#
#	/* this section is directed towards a range of surveys that worked the WCQCI.  All other tows will be suppressed.
#	   I will use the WCQCI synoptic survey depth strata and ignore the areal strata (for the time being)
#	   All other tows will have stratum==. (note that there are no Norm Olsen grouping codes with these data)
#	   [30 Aug 2012: put 1997 Caledonian survey into its own prep file apart from these surveys
#	*/
#
#	tempvar gg
#	tempfile keeptrip hold missing
#
#	syntax, file(string) 
#
#	/* these are all the valid trips for this category */
#	local triplist "25394 65806 60606 60607 65646 65366 65826 69347 58580 53020 30864"
#
#	local bluewaters=87.7
#	local scotiabay=48.5
#	local wericker=54.4
#
#	qui {
#		global surveyname "WCQCI Historical"
#
#		#delimit ;
#	stratum = 1:4
#	names(stratum) = c("180-330m", "330-500m", "500-800m", "800-1300m")
#		;
#		#delimit cr
#		lab save stratum using $stratumlabelfilename, replace
#
#		getlabelends stratum
#		getlabels `file'
#		/* get rid of extra trips in the data set */
#		save `hold'
#		foreach ttrip in `triplist' {
#			use `hold', clear
#			local ntrip=`ntrip'+1
#			count if trip==`ttrip'
#			if `r(N)'>0 {
#				keep if trip==`ttrip'
#				if `ntrip'==1 save `keeptrip'
#				else {
#					append using `keeptrip'
#					save `keeptrip', replace
#				}
#			}
#		}	
#		use `keeptrip'
#					
#		count
#		local ntows=`r(N)'
#		tab vess
#		local nvess=`r(r)'
#		replace door=$defaultdoorspread
#		replace door=`bluewaters' if trip==60606|trip==65646
#		replace door=`scotiabay' if trip==60607
#		replace door=`wericker' if trip==53020|trip==30864							
#		lab var distance "Distance travelled
#		count if distance==0
#		local ndist0=`r(N)'
#		count if distance~=.&distance>0
#		local ndist1=`r(N)'
#		replace distance=. if distance==0
#		count if distance==.
#		local ndist2=`r(N)'
#		sum speed if year==1985
#		local mean85speed=`r(mean)'
#		local N85=`r(N)'
#		replace speed=speed/$kn_to_km if year==1985			/* these look wrong so I am correcting here arbitrarily */
#	} /* qui */	
#	
#	cap log close
#	log using surveyprepmessages.log, replace
#	di in ye _n(2) "missing speed values by year:"
#	tab year if speed==.|speed==0
#	global nspeed=r(N)
#	di in ye _n(2) "mean speed values used by year:"
#	table year, c(n speed mean speed) row
#
#	qui {
#		sum speed, meanonly
#		local bigspeed=`r(mean)'
#		egen byte `gg'=group(year)
#		tab `gg'
#		local nr=r(r)
#		forv gr=1/`nr' {
#			if `gr'==1 {
#				sum year if `gg'==1, meanonly
#				local minyear=r(mean)
#			}
#			else if `gr'==`nr' {
#				sum year if `gg'==`nr', meanonly
#				local maxyear=r(mean)
#			}
#			sum speed if `gg'==`gr', meanonly
#			if `r(N)'~=0 replace speed=`r(mean)' if (speed==.|speed==0)&`gg'==`gr'
#			else replace speed=`bigspeed' if (speed==.|speed==0)&`gg'==`gr'
#		}
#	} /* qui */
#
#	/* generate my own stratum definitions: */
#	getusability
#	restratify 4 sdepth edepth meandepth
#	run $stratumlabelfilename
#	lab val stratum stratum
#	lab var strat Stratum	
#	getvessel
#	drop species wing effort2 open
#	cap log close
#	log using surveyprepmessages.log, append
#	di in ye _n "replace stratum=. if year~=1979&year~=1993&year~=1996"
#	replace stratum=. if year~=1979&year~=1993&year~=1996
#	di in ye "replace stratum=. if latitude<54|longitude>-133"
#	replace stratum=. if latitude<54|longitude>-133
#	di in ye "replace stratum=. if stratum==3"
#	replace stratum=. if stratum==3				/* get rid of 500-800m stratum */
#
#	di in ye _n "gen int area=808 if stratum==1"
#	gen int area=808 if stratum==1
#	di in ye "replace area=648 if stratum==2"
#	replace area=648 if stratum==2
#	di in ye "replace distance=speed*effort if distance==."
#	replace distance=speed*effort if distance==.			/* calculate distance travelled */
#	di in ye "gen density=weight/(distance*door/1000)"
#	gen density=weight/(distance*door/1000)
#	di in ye "replace density=0 if density==."
#	replace density=0 if density==.
#	drop seabird 
#	di in ye "replace density=. if distance==."
#	replace dens=.  if dist==.
#
#	notes: this is a file of the Historical WC Queen Chrlotte Islands survey data from `minyear' to `maxyear'.
#	notes stratum: uses depth stratum definitions from WCQCI synoptic survey, without using the deepest (800-1300 m) stratum. /*
#		*/ (no tows this deep anyway). Tows only valid with a valid usability code (0/1/2/6)
#	notes stratum: [30 Aug 2012]: now only valid for tows >54N and west of 133W.  /*
#		*/ Only valid for trips 53020 (1993) 30864 (1996) 60606 (1979) 60607 (1979) 65806 (1979). /*
#		*/ Dropped 500-800m stratum (only 3 tows in this stratum after previous exclusions)
#	notes stratum: rename this variable to {it}stratum{reset} to export the 'valid' tows to {bf}R{reset} for area N of 54N and W of 133W
#	notes: The only catch data are for $speciesname
#	notes area: areas for stratum 1 and stratum 2 (N of 54N and W of 133W) obtained from Norm Olsen (email dated 3 Sept 2012)
#	notes door: no doorspread values in the original data: assumed value (used $defaultdoorspread m=from Yamanaka et al. 1996 Can MS Report 2362)
#	notes speed: speed=mean(speed) for survey year when missing.  Replace $nspeed values in total file
#	notes speed: `N85' records where mean speed=`mean85speed' in 1985 have been divided by the kn_to_km factor=$kn_to_km to convert to km/hr
#	notes distance: there were `ndist0' records where distance==0.  These were changed to '.' before all calculations
#	notes distance: kept value in db when field was not NULL (there were `ndist1' records for this)
#	notes distance: calculated field: gen distance (km) =effort (h) *speed (km/h) when distance==.  (there were `ndist2' records for this)
#	notes density: gen density=weight/(distance*door/1000)
#	notes density: replace density=0 if density==.
#	$usenote
#	if "$usenote2"~="" $usenote2
#	$note1
#	$note2
#
#	notes dist: ==. for set==900 in 1977 (no associated effort)
#	notes dens: ==. for set==900 in 1977 (no associated effort)
#
#	qui {
#		gen byte usable=1 if use==0|use==1|use==2|use==6
#		replace usab=. if sdep==.&edep==.
#		replace usab=. if lat==.|longit==.
#		notes usab: gen byte usable=1 if use==0|use==1|use==2|use==6
#		notes usab: replace usab=. if sdep==.&edep==.
#		notes usab: replace usab=. if lat==.|long==.
#		notes usable: rename this variable to {it}stratum{reset} to export the 'valid' tows to {bf}R{reset} for all of 5E
#		replace meandepth=sdep if meand==.
#		notes meand: gen meandepth=rowmean(sdep+edep)
#		notes meand: replace meandepth=sdep if meand==.
#		ren stratu stratum54N
#		gen str5 tripl=string(trip)
#		drop trip
#		run tripl
#		encode tripl, gen(trip) lab(tripl)
#		drop tripl
#		notes trip: coded trip: order is by year
#	}
#
#	order year month date vessel trip fe_id set stratum major group dfo area speed effort dist latitude longit /*
#		*/ sdep edep door reason $use weight number density
#
#	di _n(2) "{ul on}Notes{reset}:"
#	notes
#	di in ye _n(2) "Table by year and stratum, showing missing values" _c
#	tab year stratum, mis
#	di _n(2)
#	
#	
#end def
#
#cap prog drop prep1997oceanselector
#prog def prep1997oceanselector
#
#	syntax, file(string)
#
#	global surveyname "1997 Ocean Selector WCQCI"
#
#	#delimit ;
#	stratum = 1:4
#	names(stratum) =c("180-330m", "330-500m", "500-800m", "800-1300m")
#	;
#	#delimit cr
#	lab save stratum using $stratumlabelfilename, replace
#
#	dosynoptic `file'
#
#	restratify 4 sdepth edepth
#
#	run $stratumlabelfilename
#	lab val stratum stratum
#	lab var strat Stratum
#
#	replace area=1128 if stratum==1
#	replace area=1044 if stratum==2
#	replace area=960 if stratum==3
#	replace area=2248 if stratum==4
#
#	cap log close
#	log using surveyprepmessages.log, append
#	di in ye _n(2) "Distribution of tows by stratum (before dropping deepest stratum==4)" _c
#	tab stratum year, mis
#	di in ye _n(2) "Removing deepest stratum (==4: 800-1300 m) [not fished consistently among survey years]"
#	replace stratum=. if stratum==4									/* get rid of deepest stratum (not fished in 2006 & 2007) */
#	di in ye "Removing two tows near Anthony Island (S of 53N)"
#	replace stratum=. if latitude<53
#	di _n(2)
#	log close
#
#	notes drop door
#	notes door: assumed value=$defaultdoorspread m
#	notes drop stratum
#	notes stratum: restratified to conform to WCQCI 2007+ depth strata
#
#	order year month date vessel set stratum group dfo area speed effort distance distance_calc latitude longit /*
#		*/ sdep edep door reason $use weight number density
#
#end def
#
#
#cap prog drop getweight
#prog def getweight
#
#/* 	Norm Olsen suggested that the missing weight data records are really situations where the fish were
#	too small to weigh.  Therefore, substituting the mean weight from all fish is probably biased.  I
#	have discontinued using this subroutine but have kept it for reference
#	
#	*below is the deleted code:*
#	tempfile survey meanwgt
#
#	qui {
#		save `survey'
#		collapse (sum) wei numb if wei~=.&wei>0&numb~=.&numb>0,by(year)
#		gen meanwgt=wei/numb
#		sort year
#		drop wei numb
#		save `meanwgt'
#		use `survey'
#		sort year
#		merge year using `meanwgt'
#		nois {
#			di in ye _n "Replacing missing weight data with mean weight for survey_year"
#			replace wei=numb*meanwgt if wei==.&numb~=.
#			di in ye _n(2) "Mean weight by survey_year for non-zero weight/number combinations" _c
#			table year, c(mean meanwgt)
#		}
#		drop meanwgt _merge
#	} /* qui */
#[end deleted code] 
#*/ 
#
#	count if weight==.&number~=.&stratum~=.
#	local nmissingwgt=r(N)
#	count if weight==.&numb==.&species~=.&stratum~=.
#	local nmissingwgt2=r(N)
#
#	if `nmissingwgt'>0|`nmissingwgt2'>0 {
#		nois {
#			di in re _n "WARNING!: " _n "There are `nmissingwgt' valid tows with numbers caught but no weight data" 
#			di in re "There are `nmissingwgt2' valid tows with no weight or numbers caught but with valid species code"_n(2)
#		}
#		global note1 "notes: this dataset did NOT replace the missing weight data with the mean weight by survey year (Norm Olsen pers comm). There were `nmissingwgt' valid tows where weight was missing but there was a valid fish count and `nmissingwgt2' valid tows where both weight and numbers were missing but there was a valid species code"
#	}
#	if `nmissingwgt'>0 {
#		global note2 "notes weight: there are `nmissingwgt' tows where there are no weight data but numbers were recorded.  These are likely to be very small fish that could not be weighed accurately (N. Olsen pers comm)"
#	}
#	if `nmissingwgt2'>0 {
#		global note3 "notes weight: there are `nmissingwgt2' tows where there are NO weight or numbers data were recorded AND there was a valid species code associated with the set.  It is not known what these records represent.  This message is only here to alert me to the presence of these records"
#	}
#	drop species
#
#end def
#'
#
#cap prog drop getnotes
#prog def getnotes
#
#	args synopticflag
#
#	notes: this is a file of the $surveyname data from $minyear to $maxyear.  /*
#		*/The only catch data are for $speciesname.
#	notes density: doorspread-based: =weight/(distance*door)  = kg/km^2
#	if `synopticflag'==0 {
#		notes distance: this field populated with vessel track information by Norm Olsen and Kate R/should be used as default
#		notes distance_calc: calculated field: gen distance_calc=effort2*speed /*
#			*/ (effort field used when effort2 field is missing: $neffort2 tows)
#		notes speed: missing values for this field filled in with mean for survey year ($nspeed tows)
#		notes door: missing values filled in with mean doorspread for year/stratum combination ($ndoor tows)
#	}
#	notes stratum: generated from grouping code (stratum code generated by Norm Olsen) /*
#		*/ This field is missing ('.') for usability codes other than 0/1/2/6/.
#	notes grouping: original grouping code for all tows
#	$usenote
#	if "$usenote2"~="" {
#		$usenote2
#	}
#	$note1
#	$note2
#	$note3
#
#end def
